"""add_agent_tables

Revision ID: 94177671ff04
Revises: dd6470b7fdd1
Create Date: 2025-09-30 23:24:53.694440

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '94177671ff04'
down_revision: Union[str, None] = 'dd6470b7fdd1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False, comment='Project this agent belongs to'),
    sa.Column('organization_id', sa.UUID(), nullable=False, comment='Organization (denormalized from project for RLS)'),
    sa.Column('name', sa.Text(), nullable=False, comment='Agent display name'),
    sa.Column('created_by', sa.UUID(), nullable=False, comment='User who created the agent'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('agents_name_idx', 'agents', ['name'], unique=False)
    op.create_index('agents_organization_id_idx', 'agents', ['organization_id'], unique=False)
    op.create_index('agents_project_id_idx', 'agents', ['project_id'], unique=False)
    op.create_index('agents_project_name_idx', 'agents', ['project_id', 'name'], unique=False)
    op.create_table('agent_active_status',
    sa.Column('agent_id', sa.UUID(), nullable=False, comment='Agent ID (also primary key)'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('agent_id')
    )
    op.create_table('agent_api_keys',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('agent_id', sa.UUID(), nullable=False, comment='Agent this key belongs to'),
    sa.Column('key_prefix', sa.String(length=16), nullable=False, comment='First 12-16 characters of key (for identification)'),
    sa.Column('key_hash', sa.Text(), nullable=False, comment='Bcrypt hashed full key'),
    sa.Column('name', sa.Text(), nullable=True, comment='Optional friendly name for the key'),
    sa.Column('last_used_at', sa.TIMESTAMP(timezone=True), nullable=True, comment='Timestamp of last usage'),
    sa.Column('expires_at', sa.TIMESTAMP(timezone=True), nullable=True, comment='Optional expiration date'),
    sa.Column('created_by', sa.UUID(), nullable=False, comment='User who created the key'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key_prefix')
    )
    op.create_index('agent_api_keys_agent_id_idx', 'agent_api_keys', ['agent_id'], unique=False)
    op.create_index('agent_api_keys_expires_at_idx', 'agent_api_keys', ['expires_at'], unique=False)
    op.create_index('agent_api_keys_prefix_idx', 'agent_api_keys', ['key_prefix'], unique=True)
    op.create_table('agent_archives',
    sa.Column('agent_id', sa.UUID(), nullable=False, comment='Archived agent ID (also primary key)'),
    sa.Column('reason', sa.Text(), nullable=False, comment='Reason for archiving (audit trail)'),
    sa.Column('archived_by', sa.UUID(), nullable=False, comment='User who performed the archiving'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['archived_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('agent_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('agent_archives')
    op.drop_index('agent_api_keys_prefix_idx', table_name='agent_api_keys')
    op.drop_index('agent_api_keys_expires_at_idx', table_name='agent_api_keys')
    op.drop_index('agent_api_keys_agent_id_idx', table_name='agent_api_keys')
    op.drop_table('agent_api_keys')
    op.drop_table('agent_active_status')
    op.drop_index('agents_project_name_idx', table_name='agents')
    op.drop_index('agents_project_id_idx', table_name='agents')
    op.drop_index('agents_organization_id_idx', table_name='agents')
    op.drop_index('agents_name_idx', table_name='agents')
    op.drop_table('agents')
    # ### end Alembic commands ###
