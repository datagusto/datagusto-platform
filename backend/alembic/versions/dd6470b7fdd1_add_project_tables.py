"""add_project_tables

Revision ID: dd6470b7fdd1
Revises: d6b1246973c1
Create Date: 2025-09-30 23:16:01.760819

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dd6470b7fdd1'
down_revision: Union[str, None] = 'd6b1246973c1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False, comment='Organization this project belongs to'),
    sa.Column('name', sa.Text(), nullable=False, comment='Project display name'),
    sa.Column('created_by', sa.UUID(), nullable=False, comment='User who created the project'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('projects_created_by_idx', 'projects', ['created_by'], unique=False)
    op.create_index('projects_name_idx', 'projects', ['name'], unique=False)
    op.create_index('projects_org_name_idx', 'projects', ['organization_id', 'name'], unique=False)
    op.create_index('projects_organization_id_idx', 'projects', ['organization_id'], unique=False)
    op.create_table('project_active_status',
    sa.Column('project_id', sa.UUID(), nullable=False, comment='Project ID (also primary key)'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('project_id')
    )
    op.create_table('project_archives',
    sa.Column('project_id', sa.UUID(), nullable=False, comment='Archived project ID (also primary key)'),
    sa.Column('reason', sa.Text(), nullable=False, comment='Reason for archiving (audit trail)'),
    sa.Column('archived_by', sa.UUID(), nullable=False, comment='User who performed the archiving'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['archived_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('project_id')
    )
    op.create_table('project_members',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False, comment='Unique membership record ID'),
    sa.Column('project_id', sa.UUID(), nullable=False, comment='Project ID'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='Member user ID'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_id', 'user_id', name='project_members_unique')
    )
    op.create_index('project_members_project_id_idx', 'project_members', ['project_id'], unique=False)
    op.create_index('project_members_user_id_idx', 'project_members', ['user_id'], unique=False)
    op.create_table('project_owners',
    sa.Column('project_id', sa.UUID(), nullable=False, comment='Project ID (primary key enforces one owner)'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='Owner user ID'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('project_id')
    )
    op.create_index('project_owners_user_id_idx', 'project_owners', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('project_owners_user_id_idx', table_name='project_owners')
    op.drop_table('project_owners')
    op.drop_index('project_members_user_id_idx', table_name='project_members')
    op.drop_index('project_members_project_id_idx', table_name='project_members')
    op.drop_table('project_members')
    op.drop_table('project_archives')
    op.drop_table('project_active_status')
    op.drop_index('projects_organization_id_idx', table_name='projects')
    op.drop_index('projects_org_name_idx', table_name='projects')
    op.drop_index('projects_name_idx', table_name='projects')
    op.drop_index('projects_created_by_idx', table_name='projects')
    op.drop_table('projects')
    # ### end Alembic commands ###
